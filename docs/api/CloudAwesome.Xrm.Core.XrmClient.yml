### YamlMime:ManagedReference
items:
- uid: CloudAwesome.Xrm.Core.XrmClient
  commentId: T:CloudAwesome.Xrm.Core.XrmClient
  id: XrmClient
  parent: CloudAwesome.Xrm.Core
  children:
  - CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency(Microsoft.Xrm.Sdk.IOrganizationService)
  - CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient(System.String)
  - CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration(CloudAwesome.Xrm.Core.Models.CdsConnection)
  - CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret(System.String,System.String,System.String)
  - CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365(System.String,System.String,System.String)
  - CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit(Microsoft.Xrm.Sdk.IOrganizationService)
  langs:
  - csharp
  - vb
  name: XrmClient
  nameWithType: XrmClient
  fullName: CloudAwesome.Xrm.Core.XrmClient
  type: Class
  source:
    remote:
      path: src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
      branch: master
      repo: https://github.com/Cloud-Awesome/cds-core
    id: XrmClient
    path: ../src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
    startLine: 11
  assemblies:
  - CloudAwesome.Xrm.Core
  namespace: CloudAwesome.Xrm.Core
  summary: "\nWrapper around the Xrm.Tooling connector\n"
  example: []
  syntax:
    content: public static class XrmClient
    content.vb: Public Module XrmClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient(System.String)
  commentId: M:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient(System.String)
  id: GetCrmServiceClient(System.String)
  parent: CloudAwesome.Xrm.Core.XrmClient
  langs:
  - csharp
  - vb
  name: GetCrmServiceClient(String)
  nameWithType: XrmClient.GetCrmServiceClient(String)
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient(System.String)
  type: Method
  source:
    remote:
      path: src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
      branch: master
      repo: https://github.com/Cloud-Awesome/cds-core
    id: GetCrmServiceClient
    path: ../src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
    startLine: 18
  assemblies:
  - CloudAwesome.Xrm.Core
  namespace: CloudAwesome.Xrm.Core
  summary: "\nCreates a new CrmServiceClient given a valid connection string\n"
  example: []
  syntax:
    content: public static IOrganizationService GetCrmServiceClient(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
      description: ''
    return:
      type: Microsoft.Xrm.Sdk.IOrganizationService
      description: CrmServiceClient
    content.vb: Public Shared Function GetCrmServiceClient(connectionString As String) As IOrganizationService
  overload: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365(System.String,System.String,System.String)
  commentId: M:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365(System.String,System.String,System.String)
  id: GetCrmServiceClientWithO365(System.String,System.String,System.String)
  parent: CloudAwesome.Xrm.Core.XrmClient
  langs:
  - csharp
  - vb
  name: GetCrmServiceClientWithO365(String, String, String)
  nameWithType: XrmClient.GetCrmServiceClientWithO365(String, String, String)
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
      branch: master
      repo: https://github.com/Cloud-Awesome/cds-core
    id: GetCrmServiceClientWithO365
    path: ../src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
    startLine: 30
  assemblies:
  - CloudAwesome.Xrm.Core
  namespace: CloudAwesome.Xrm.Core
  summary: "\nCreates a new CrmServiceClient given a valid username, password and target url\n"
  example: []
  syntax:
    content: public static IOrganizationService GetCrmServiceClientWithO365(string url, string username, string password)
    parameters:
    - id: url
      type: System.String
      description: ''
    - id: username
      type: System.String
      description: ''
    - id: password
      type: System.String
      description: ''
    return:
      type: Microsoft.Xrm.Sdk.IOrganizationService
      description: CrmServiceClient
    content.vb: Public Shared Function GetCrmServiceClientWithO365(url As String, username As String, password As String) As IOrganizationService
  overload: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret(System.String,System.String,System.String)
  commentId: M:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret(System.String,System.String,System.String)
  id: GetCrmServiceClientWithClientSecret(System.String,System.String,System.String)
  parent: CloudAwesome.Xrm.Core.XrmClient
  langs:
  - csharp
  - vb
  name: GetCrmServiceClientWithClientSecret(String, String, String)
  nameWithType: XrmClient.GetCrmServiceClientWithClientSecret(String, String, String)
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
      branch: master
      repo: https://github.com/Cloud-Awesome/cds-core
    id: GetCrmServiceClientWithClientSecret
    path: ../src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
    startLine: 47
  assemblies:
  - CloudAwesome.Xrm.Core
  namespace: CloudAwesome.Xrm.Core
  summary: "\nCreates a new CrmServiceClient given valid AAD app registration details\n"
  example: []
  syntax:
    content: public static IOrganizationService GetCrmServiceClientWithClientSecret(string url, string appId, string appSecret)
    parameters:
    - id: url
      type: System.String
      description: ''
    - id: appId
      type: System.String
      description: ''
    - id: appSecret
      type: System.String
      description: ''
    return:
      type: Microsoft.Xrm.Sdk.IOrganizationService
      description: CrmServiceClient
    content.vb: Public Shared Function GetCrmServiceClientWithClientSecret(url As String, appId As String, appSecret As String) As IOrganizationService
  overload: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration(CloudAwesome.Xrm.Core.Models.CdsConnection)
  commentId: M:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration(CloudAwesome.Xrm.Core.Models.CdsConnection)
  id: GetCrmServiceClientFromManifestConfiguration(CloudAwesome.Xrm.Core.Models.CdsConnection)
  parent: CloudAwesome.Xrm.Core.XrmClient
  langs:
  - csharp
  - vb
  name: GetCrmServiceClientFromManifestConfiguration(CdsConnection)
  nameWithType: XrmClient.GetCrmServiceClientFromManifestConfiguration(CdsConnection)
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration(CloudAwesome.Xrm.Core.Models.CdsConnection)
  type: Method
  source:
    remote:
      path: src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
      branch: master
      repo: https://github.com/Cloud-Awesome/cds-core
    id: GetCrmServiceClientFromManifestConfiguration
    path: ../src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
    startLine: 62
  assemblies:
  - CloudAwesome.Xrm.Core
  namespace: CloudAwesome.Xrm.Core
  summary: "\nCreates a new CrmServiceClient from configuration passed through an XML manifest configuration\n"
  example: []
  syntax:
    content: public static IOrganizationService GetCrmServiceClientFromManifestConfiguration(CdsConnection cdsConnection)
    parameters:
    - id: cdsConnection
      type: CloudAwesome.Xrm.Core.Models.CdsConnection
      description: ''
    return:
      type: Microsoft.Xrm.Sdk.IOrganizationService
      description: CrmServiceClient
    content.vb: Public Shared Function GetCrmServiceClientFromManifestConfiguration(cdsConnection As CdsConnection) As IOrganizationService
  overload: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit(Microsoft.Xrm.Sdk.IOrganizationService)
  commentId: M:CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit(Microsoft.Xrm.Sdk.IOrganizationService)
  id: GetRootBusinessUnit(Microsoft.Xrm.Sdk.IOrganizationService)
  parent: CloudAwesome.Xrm.Core.XrmClient
  langs:
  - csharp
  - vb
  name: GetRootBusinessUnit(IOrganizationService)
  nameWithType: XrmClient.GetRootBusinessUnit(IOrganizationService)
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit(Microsoft.Xrm.Sdk.IOrganizationService)
  type: Method
  source:
    remote:
      path: src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
      branch: master
      repo: https://github.com/Cloud-Awesome/cds-core
    id: GetRootBusinessUnit
    path: ../src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
    startLine: 84
  assemblies:
  - CloudAwesome.Xrm.Core
  namespace: CloudAwesome.Xrm.Core
  summary: "\nGets a reference to the target environment&apos;s root business unit (usually the same name as the Org)\n"
  example: []
  syntax:
    content: public static EntityReference GetRootBusinessUnit(IOrganizationService organizationService)
    parameters:
    - id: organizationService
      type: Microsoft.Xrm.Sdk.IOrganizationService
      description: ''
    return:
      type: Microsoft.Xrm.Sdk.EntityReference
      description: EntityReference of the root BusinessUnit
    content.vb: Public Shared Function GetRootBusinessUnit(organizationService As IOrganizationService) As EntityReference
  overload: CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency(Microsoft.Xrm.Sdk.IOrganizationService)
  commentId: M:CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency(Microsoft.Xrm.Sdk.IOrganizationService)
  id: GetBaseCurrency(Microsoft.Xrm.Sdk.IOrganizationService)
  parent: CloudAwesome.Xrm.Core.XrmClient
  langs:
  - csharp
  - vb
  name: GetBaseCurrency(IOrganizationService)
  nameWithType: XrmClient.GetBaseCurrency(IOrganizationService)
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency(Microsoft.Xrm.Sdk.IOrganizationService)
  type: Method
  source:
    remote:
      path: src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
      branch: master
      repo: https://github.com/Cloud-Awesome/cds-core
    id: GetBaseCurrency
    path: ../src/CloudAwesome.Xrm.Core/CloudAwesome.Xrm.Core/XrmClient.cs
    startLine: 107
  assemblies:
  - CloudAwesome.Xrm.Core
  namespace: CloudAwesome.Xrm.Core
  summary: "\nGets a reference to the target environment&apos;s base currency \n"
  example: []
  syntax:
    content: public static EntityReference GetBaseCurrency(IOrganizationService organizationService)
    parameters:
    - id: organizationService
      type: Microsoft.Xrm.Sdk.IOrganizationService
      description: ''
    return:
      type: Microsoft.Xrm.Sdk.EntityReference
      description: EntityReference of the BaseCurrency
    content.vb: Public Shared Function GetBaseCurrency(organizationService As IOrganizationService) As EntityReference
  overload: CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CloudAwesome.Xrm.Core
  commentId: N:CloudAwesome.Xrm.Core
  name: CloudAwesome.Xrm.Core
  nameWithType: CloudAwesome.Xrm.Core
  fullName: CloudAwesome.Xrm.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient*
  commentId: Overload:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient
  name: GetCrmServiceClient
  nameWithType: XrmClient.GetCrmServiceClient
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClient
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Xrm.Sdk.IOrganizationService
  commentId: T:Microsoft.Xrm.Sdk.IOrganizationService
  parent: Microsoft.Xrm.Sdk
  isExternal: true
  name: IOrganizationService
  nameWithType: IOrganizationService
  fullName: Microsoft.Xrm.Sdk.IOrganizationService
- uid: Microsoft.Xrm.Sdk
  commentId: N:Microsoft.Xrm.Sdk
  isExternal: true
  name: Microsoft.Xrm.Sdk
  nameWithType: Microsoft.Xrm.Sdk
  fullName: Microsoft.Xrm.Sdk
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365*
  commentId: Overload:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365
  name: GetCrmServiceClientWithO365
  nameWithType: XrmClient.GetCrmServiceClientWithO365
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithO365
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret*
  commentId: Overload:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret
  name: GetCrmServiceClientWithClientSecret
  nameWithType: XrmClient.GetCrmServiceClientWithClientSecret
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientWithClientSecret
- uid: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration*
  commentId: Overload:CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration
  name: GetCrmServiceClientFromManifestConfiguration
  nameWithType: XrmClient.GetCrmServiceClientFromManifestConfiguration
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetCrmServiceClientFromManifestConfiguration
- uid: CloudAwesome.Xrm.Core.Models.CdsConnection
  commentId: T:CloudAwesome.Xrm.Core.Models.CdsConnection
  parent: CloudAwesome.Xrm.Core.Models
  name: CdsConnection
  nameWithType: CdsConnection
  fullName: CloudAwesome.Xrm.Core.Models.CdsConnection
- uid: CloudAwesome.Xrm.Core.Models
  commentId: N:CloudAwesome.Xrm.Core.Models
  name: CloudAwesome.Xrm.Core.Models
  nameWithType: CloudAwesome.Xrm.Core.Models
  fullName: CloudAwesome.Xrm.Core.Models
- uid: CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit*
  commentId: Overload:CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit
  name: GetRootBusinessUnit
  nameWithType: XrmClient.GetRootBusinessUnit
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetRootBusinessUnit
- uid: Microsoft.Xrm.Sdk.EntityReference
  commentId: T:Microsoft.Xrm.Sdk.EntityReference
  parent: Microsoft.Xrm.Sdk
  isExternal: true
  name: EntityReference
  nameWithType: EntityReference
  fullName: Microsoft.Xrm.Sdk.EntityReference
- uid: CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency*
  commentId: Overload:CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency
  name: GetBaseCurrency
  nameWithType: XrmClient.GetBaseCurrency
  fullName: CloudAwesome.Xrm.Core.XrmClient.GetBaseCurrency
